{
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "mocha", "ascii"],
    "env": {
        "es6": true,
        "node": true
    },
    "extends": ["eslint:recommended"],
    "parserOptions": {
        "ecmaVersion": 2022,
        "sourceType": "module",
        "project": ["./tsconfig.json"]
    },
    "rules": {
        "comma-dangle": ["error", "always-multiline"],
        "semi": ["error", "always"],
        "object-curly-spacing": ["error", "always"],
        "no-return-await": ["error"],
        "require-await": ["error"],
        "comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "quote-props": ["error", "as-needed"],
        "quotes": [
            "error",
            "single",
            {
                "avoidEscape": true
            }
        ],
        "no-unused-expressions": ["error"],
        "default-param-last": ["error"],
        "dot-notation": ["error"],
        "brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "func-call-spacing": ["error"],
        "no-dupe-class-members": ["error"],
        "no-duplicate-imports": ["error"],
        "no-redeclare": ["error"],
        "space-infix-ops": ["error"],
        "ascii/valid-name": ["error"]
    },
    "overrides": [
        {
            "files": ["*.ts", "*.tsx"],
            "extends": [
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/recommended-requiring-type-checking"
            ],
            "rules": {
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/ban-ts-comment": "off",
                "@typescript-eslint/no-floating-promises": "off",
                "@typescript-eslint/no-empty-interface": "off",
                "@typescript-eslint/unbound-method": "off",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_",
                        "ignoreRestSiblings": true
                    }
                ],
                "@typescript-eslint/member-delimiter-style": ["error"],
                "@typescript-eslint/member-ordering": ["error"],
                "@typescript-eslint/adjacent-overload-signatures": ["error"],
                "@typescript-eslint/consistent-type-imports": [
                    "error",
                    {
                        "prefer": "type-imports"
                    }
                ],
                "@typescript-eslint/explicit-function-return-type": [
                    "error",
                    {
                        "allowExpressions": true
                    }
                ],
                "@typescript-eslint/type-annotation-spacing": ["error"],
                "@typescript-eslint/no-misused-promises": [
                    "error",
                    {
                        "checksVoidReturn": false
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "interface",
                        "format": ["PascalCase"],
                        "custom": {
                            "regex": "^I[A-Z]",
                            "match": true
                        }
                    }
                ]
            }
        },
        {
            "files": ["*.d.ts"],
            "rules": {
                "no-unused-vars": ["off"],
                "@typescript-eslint/no-unused-vars": ["off"]
            }
        },
        {
            "files": ["test/**/*.js"],
            "env": {
                "mocha": true
            },
            "rules": {
                "mocha/handle-done-callback": ["error"],
                "mocha/no-exclusive-tests": ["error"],
                "mocha/no-global-tests": ["error"],
                "mocha/no-identical-title": ["error"],
                "mocha/no-nested-tests": ["error"],
                "mocha/no-pending-tests": ["error"],
                "mocha/no-sibling-hooks": ["error"],
                "mocha/no-top-level-hooks": ["error"]
            }
        },
        {
            "files": ["src/public/**/*.ts", "src/public/**/*.tsx"],
            "globals": {
                "window": "readonly"
            }
        }
    ]
}
