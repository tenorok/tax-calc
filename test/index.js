import { assert } from 'chai';
import { calcTax } from '../src/index.ts';
import { scaleFlat } from '../src/scales/flat.ts';
import { scaleProgressive2021 } from '../src/scales/progressive2021.ts';
import { scaleProgressive2024 } from '../src/scales/progressive2024.ts';

// Расчёты проверены в таблице
// https://docs.google.com/spreadsheets/d/e/2PACX-1vQFRUkDpzMO5jT3Kyzlq1I-CaceXwKWLWKRK_2bGwWEg_PTx7lLnhr0vt1D3PpVhD_OhpMbDHRei9fj/pubhtml
describe('tax-calc', () => {
    describe('flat', () => {
        it('Любой доход', () => {
            const result = calcTax({
                income: [
                    [80_000],
                    [80_000],
                    [80_000],
                    [80_000],
                    [80_000, 100_000],
                    [80_000],
                    [80_000],
                    [80_000],
                    [80_000],
                    [80_000],
                    [80_000, 100_000],
                    [80_000],
                ],
                calcTax: scaleFlat,
            });
            assert.deepEqual(result, {
                tax: [
                    10_400, 10_400, 10_400, 10_400, 23_400, 10_400, 10_400,
                    10_400, 10_400, 10_400, 23_400, 10_400,
                ],
                percent: [
                    0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13,
                    0.13, 0.13,
                ],
                cumulative: [
                    10_400, 20_800, 31_200, 41_600, 65_000, 75_400, 85_800,
                    96_200, 106_600, 117_000, 140_400, 150_800,
                ],
            });
        });
    });

    describe('progressive2021', () => {
        it('Доход свыше 5 млн', () => {
            const result = calcTax({
                income: [
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000, 500_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000, 500_000],
                    [420_000],
                ],
                calcTax: scaleProgressive2021,
            });
            assert.deepEqual(result, {
                tax: [
                    54_600, 54_600, 54_600, 54_600, 119_600, 54_600, 54_600,
                    54_600, 54_600, 54_600, 132_000, 63_000,
                ],
                percent: [
                    0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13,
                    0.14347826086956522, 0.15,
                ],
                cumulative: [
                    54_600, 109_200, 163_800, 218_400, 338_000, 392_600,
                    447_200, 501_800, 556_400, 611_000, 743_000, 806_000,
                ],
            });
        });
    });

    describe('progressive2024', () => {
        it('Доход свыше 5 млн', () => {
            const result = calcTax({
                income: [
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000, 500_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000],
                    [420_000, 500_000],
                    [420_000],
                ],
                calcTax: scaleProgressive2024,
            });
            assert.deepEqual(result, {
                tax: [
                    54_600, 54_600, 54_600, 54_600, 123_600, 63_000, 63_000,
                    63_000, 63_000, 63_000, 156_600, 75_600,
                ],
                percent: [
                    0.13, 0.13, 0.13, 0.13, 0.13434782608695653, 0.15, 0.15,
                    0.15, 0.15, 0.15, 0.17021739130434782, 0.18,
                ],
                cumulative: [
                    54_600, 109_200, 163_800, 218_400, 342_000, 405_000,
                    468_000, 531_000, 594_000, 657_000, 813_600, 889_200,
                ],
            });
        });

        it('Доход свыше 20 млн', () => {
            const result = calcTax({
                income: [
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                    [2_000_000],
                ],
                calcTax: scaleProgressive2024,
            });
            assert.deepEqual(result, {
                tax: [
                    260_000, 292_000, 330_000, 360_000, 360_000, 360_000,
                    360_000, 360_000, 360_000, 360_000, 400_000, 400_000,
                ],
                percent: [
                    0.13, 0.146, 0.165, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
                    0.18, 0.2, 0.2,
                ],
                cumulative: [
                    260_000, 552_000, 882_000, 1_242_000, 1_602_000, 1_962_000,
                    2_322_000, 2_682_000, 3_042_000, 3_402_000, 3_802_000,
                    4_202_000,
                ],
            });
        });

        it('Доход свыше 50 млн с попаданием сразу в несколько категорий', () => {
            const result = calcTax({
                income: [
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                    [6_000_000],
                ],
                calcTax: scaleProgressive2024,
            });
            assert.deepEqual(result, {
                tax: [
                    882_000, 1_080_000, 1_080_000, 1_160_000, 1_200_000,
                    1_200_000, 1_200_000, 1_200_000, 1_280_000, 1_320_000,
                ],
                percent: [
                    0.147, 0.18, 0.18, 0.19333333333333333, 0.2, 0.2, 0.2, 0.2,
                    0.21333333333333335, 0.22,
                ],
                cumulative: [
                    882_000, 1_962_000, 3_042_000, 4_202_000, 5_402_000,
                    6_602_000, 7_802_000, 9_002_000, 10_282_000, 11_602_000,
                ],
            });
        });
    });
});
